<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/cache
    	http://www.springframework.org/schema/cache/spring-cache.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		">

	<mvc:annotation-driven>
		<mvc:argument-resolvers>  
              <bean  class="cn.howso.deeplan.perm.component.LoginUserArugmentResolver"/>  
               <bean  class="cn.howso.deeplan.perm.component.ListArgResolver"/>  
        </mvc:argument-resolvers>  
		<mvc:message-converters register-defaults="false">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!-- 避免IE返回时出现下载提示！ -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 使springmvc上下文扫描时只扫描Controller，让每个组件只创建一次 -->
	<!-- 要使include-filter和exlude-filter起作用，base-package就必须相对明确，不能直接写cn -->
	<!-- 别试其他方式了，都不行。 -->
	<context:component-scan base-package="cn.**.controller">
		<!--这个或者下面正则方式都可以  -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<!-- <context:include-filter type="regex" expression=".*Controller"/> -->
	</context:component-scan>
	<context:component-scan base-package="cn.**.ws">
		<context:include-filter type="regex" expression=".*\.ws\..*"/>
	</context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**"/> <bean 
		class="cn.howso.specialmp.system.interceptor.SessionInterceptor"/> </mvc:interceptor> 
		<mvc:interceptor> <mvc:mapping path="/**"/> <bean class="cn.howso.specialmp.system.interceptor.AuthorizationInterceptor"/> 
		</mvc:interceptor> </mvc:interceptors> -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**" /> <bean 
		class="cn.howso.specialmp.system.interceptor.AreaInterceptor" /> </mvc:interceptor> 
		</mvc:interceptors> -->
	<bean id="exceptionResolver" class="cn.howso.deeplan.framework.exception.ExceptionResolver"></bean>
	<bean name="/**//**"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/" />
					<property name="suffix" value=".html" />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
         <!-- 请求编码格式 -->  
         <property name="defaultEncoding" value="utf-8"></property>  
         <!-- 上传文件大小(单位:字节) -->  
         <property name="maxUploadSize" value="50000000"></property>  
         <!-- 缓冲区大小(单位:KB) -->  
         <property name="maxInMemorySize" value="1024"></property>  
    </bean>  
<!--     <import resource="application-websocket.xml"/>
 --></beans>
